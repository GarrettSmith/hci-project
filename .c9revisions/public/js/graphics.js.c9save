{"ts":1364365360944,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364365454457,"patch":[[{"diffs":[[1,"//\r\n//  arbor-graphics.js\r\n//  canvas fructose\r\n//\r\n//  Copyright (c) 2012 Samizdat Drafting Co.\r\n// \r\n//  Permission is hereby granted, free of charge, to any person\r\n//  obtaining a copy of this software and associated documentation\r\n//  files (the \"Software\"), to deal in the Software without\r\n//  restriction, including without limitation the rights to use,\r\n//  copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//  copies of the Software, and to permit persons to whom the\r\n//  Software is furnished to do so, subject to the following\r\n//  conditions:\r\n// \r\n//  The above copyright notice and this permission notice shall be\r\n//  included in all copies or substantial portions of the Software.\r\n// \r\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n//  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n//  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n//  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n//  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n//  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n//  OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n\r\n(function($){\r\n\r\n  /*        etc.js */  var trace=function(msg){if(typeof(window)==\"undefined\"||!window.console){return}var len=arguments.length;var args=[];for(var i=0;i<len;i++){args.push(\"arguments[\"+i+\"]\")}eval(\"console.log(\"+args.join(\",\")+\")\")};var dirname=function(a){var b=a.replace(/^\\/?(.*?)\\/?$/,\"$1\").split(\"/\");b.pop();return\"/\"+b.join(\"/\")};var basename=function(b){var c=b.replace(/^\\/?(.*?)\\/?$/,\"$1\").split(\"/\");var a=c.pop();if(a==\"\"){return null}else{return a}};var _ordinalize_re=/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g;var ordinalize=function(a){var b=\"\"+a;if(a<11000){b=(\"\"+a).replace(_ordinalize_re,\"$1,\")}else{if(a<1000000){b=Math.floor(a/1000)+\"k\"}else{if(a<1000000000){b=(\"\"+Math.floor(a/1000)).replace(_ordinalize_re,\"$1,\")+\"m\"}}}return b};var nano=function(a,b){return a.replace(/\\{([\\w\\-\\.]*)}/g,function(f,c){var d=c.split(\".\"),e=b[d.shift()];$.each(d,function(){if(e.hasOwnProperty(this)){e=e[this]}else{e=f}});return e})};var objcopy=function(a){if(a===undefined){return undefined}if(a===null){return null}if(a.parentNode){return a}switch(typeof a){case\"string\":return a.substring(0);break;case\"number\":return a+0;break;case\"boolean\":return a===true;break}var b=($.isArray(a))?[]:{};$.each(a,function(d,c){b[d]=objcopy(c)});return b};var objmerge=function(d,b){d=d||{};b=b||{};var c=objcopy(d);for(var a in b){c[a]=b[a]}return c};var objcmp=function(e,c,d){if(!e||!c){return e===c}if(typeof e!=typeof c){return false}if(typeof e!=\"object\"){return e===c}else{if($.isArray(e)){if(!($.isArray(c))){return false}if(e.length!=c.length){return false}}else{var h=[];for(var f in e){if(e.hasOwnProperty(f)){h.push(f)}}var g=[];for(var f in c){if(c.hasOwnProperty(f)){g.push(f)}}if(!d){h.sort();g.sort()}if(h.join(\",\")!==g.join(\",\")){return false}}var i=true;$.each(e,function(a){var b=objcmp(e[a],c[a]);i=i&&b;if(!i){return false}});return i}};var objkeys=function(b){var a=[];$.each(b,function(d,c){if(b.hasOwnProperty(d)){a.push(d)}});return a};var objcontains=function(c){if(!c||typeof c!=\"object\"){return false}for(var b=1,a=arguments.length;b<a;b++){if(c.hasOwnProperty(arguments[b])){return true}}return false};var uniq=function(b){var a=b.length;var d={};for(var c=0;c<a;c++){d[b[c]]=true}return objkeys(d)};var arbor_path=function(){var a=$(\"script\").map(function(b){var c=$(this).attr(\"src\");if(!c){return}if(c.match(/arbor[^\\/\\.]*.js|dev.js/)){return c.match(/.*\\//)||\"/\"}});if(a.length>0){return a[0]}else{return null}};\r\n  /*     colors.js */  var Colors=(function(){var f=/#[0-9a-f]{6}/i;var b=/#(..)(..)(..)/;var c=function(h){var g=h.toString(16);return(g.length==2)?g:\"0\"+g};var a=function(g){return parseInt(g,16)};var d=function(g){if(!g||typeof g!=\"object\"){return false}var h=objkeys(g).sort().join(\"\");if(h==\"abgr\"){return true}};var e={CSS:{aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgrey:\"#a9a9a9\",darkgreen:\"#006400\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",grey:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgrey:\"#d3d3d3\",lightgreen:\"#90ee90\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370d8\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#d87093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"},decode:function(h){var g=arguments.length;for(var l=g-1;l>=0;l--){if(arguments[l]===undefined){g--}}var k=arguments;if(!h){return null}if(g==1&&d(h)){return h}var j=null;if(typeof h==\"string\"){var o=1;if(g==2){o=k[1]}var n=e.CSS[h.toLowerCase()];if(n!==undefined){h=n}var m=h.match(f);if(m){vals=h.match(b);if(!vals||!vals.length||vals.length!=4){return null}j={r:a(vals[1]),g:a(vals[2]),b:a(vals[3]),a:o}}}else{if(typeof h==\"number\"){if(g>=3){j={r:k[0],g:k[1],b:k[2],a:1};if(g>=4){j.a*=k[3]}}else{if(g>=1){j={r:k[0],g:k[0],b:k[0],a:1};if(g==2){j.a*=k[1]}}}}}return j},validate:function(g){if(!g||typeof g!=\"string\"){return false}if(e.CSS[g.toLowerCase()]!==undefined){return true}if(g.match(f)){return true}return false},mix:function(h,g,k){var j=e.decode(h);var i=e.decode(g)},blend:function(g,j){j=(j!==undefined)?Math.max(0,Math.min(1,j)):1;var h=e.decode(g);if(!h){return null}if(j==1){return g}var h=g;if(typeof g==\"string\"){h=e.decode(g)}var i=objcopy(h);i.a*=j;return nano(\"rgba({r},{g},{b},{a})\",i)},encode:function(g){if(!d(g)){g=e.decode(g);if(!d(g)){return null}}if(g.a==1){return nano(\"#{r}{g}{b}\",{r:c(g.r),g:c(g.g),b:c(g.b)})}else{return nano(\"rgba({r},{g},{b},{a})\",g)}}};return e})();\r\n  /* primitives.js */  var Primitives=function(c,f,g){var b=function(i,m,j,l,k){this.x=i;this.y=m;this.w=j;this.h=l;this.style=(k!==undefined)?k:{}};b.prototype={draw:function(h){this._draw(h)},_draw:function(i,n,j,l,k){if(objcontains(i,\"stroke\",\"fill\",\"width\")){k=i}if(this.x!==undefined){i=this.x,n=this.y,j=this.w,l=this.h;k=objmerge(this.style,k)}k=objmerge(f,k);if(!k.stroke&&!k.fill){return}var m=0.5522848;ox=(j/2)*m,oy=(l/2)*m,xe=i+j,ye=n+l,xm=i+j/2,ym=n+l/2;c.save();c.beginPath();c.moveTo(i,ym);c.bezierCurveTo(i,ym-oy,xm-ox,n,xm,n);c.bezierCurveTo(xm+ox,n,xe,ym-oy,xe,ym);c.bezierCurveTo(xe,ym+oy,xm+ox,ye,xm,ye);c.bezierCurveTo(xm-ox,ye,i,ym+oy,i,ym);c.closePath();if(k.fill!==null){if(k.alpha!==undefined){c.fillStyle=Colors.blend(k.fill,k.alpha)}else{c.fillStyle=Colors.encode(k.fill)}c.fill()}if(k.stroke!==null){c.strokeStyle=Colors.encode(k.stroke);if(!isNaN(k.width)){c.lineWidth=k.width}c.stroke()}c.restore()}};var a=function(i,n,j,l,m,k){if(objcontains(m,\"stroke\",\"fill\",\"width\")){k=m;m=0}this.x=i;this.y=n;this.w=j;this.h=l;this.r=(m!==undefined)?m:0;this.style=(k!==undefined)?k:{}};a.prototype={draw:function(h){this._draw(h)},_draw:function(j,o,k,m,n,l){if(objcontains(n,\"stroke\",\"fill\",\"width\",\"alpha\")){l=n;n=0}else{if(objcontains(j,\"stroke\",\"fill\",\"width\",\"alpha\")){l=j}}if(this.x!==undefined){j=this.x,o=this.y,k=this.w,m=this.h;l=objmerge(this.style,l)}l=objmerge(f,l);if(!l.stroke&&!l.fill){return}var i=(n>0);c.save();c.beginPath();c.moveTo(j+n,o);c.lineTo(j+k-n,o);if(i){c.quadraticCurveTo(j+k,o,j+k,o+n)}c.lineTo(j+k,o+m-n);if(i){c.quadraticCurveTo(j+k,o+m,j+k-n,o+m)}c.lineTo(j+n,o+m);if(i){c.quadraticCurveTo(j,o+m,j,o+m-n)}c.lineTo(j,o+n);if(i){c.quadraticCurveTo(j,o,j+n,o)}if(l.fill!==null){if(l.alpha!==undefined){c.fillStyle=Colors.blend(l.fill,l.alpha)}else{c.fillStyle=Colors.encode(l.fill)}c.fill()}if(l.stroke!==null){c.strokeStyle=Colors.encode(l.stroke);if(!isNaN(l.width)){c.lineWidth=l.width}c.stroke()}c.restore()}};var e=function(i,l,h,j,k){if(k!==undefined||typeof j==\"number\"){this.points=[{x:i,y:l},{x:h,y:j}];this.style=k||{}}else{if($.isArray(i)){this.points=i;this.style=l||{}}else{this.points=[i,l];this.style=h||{}}}};e.prototype={draw:function(h){if(this.points.length<2){return}var j=[];if(!$.isArray(this.points[0])){j.push(this.points)}else{j=this.points}c.save();c.beginPath();$.each(j,function(n,m){c.moveTo(m[0].x+0.5,m[0].y+0.5);$.each(m,function(o,p){if(o==0){return}c.lineTo(p.x+0.5,p.y+0.5)})});var i=$.extend(objmerge(f,this.style),h);if(i.closed){c.closePath()}if(i.fill!==undefined){var l=Colors.decode(i.fill,(i.alpha!==undefined)?i.alpha:1);if(l){c.fillStyle=Colors.encode(l)}c.fill()}if(i.stroke!==undefined){var k=Colors.decode(i.stroke,(i.alpha!==undefined)?i.alpha:1);if(k){c.strokeStyle=Colors.encode(k)}if(!isNaN(i.width)){c.lineWidth=i.width}c.stroke()}c.restore()}};var d=function(i,h,l,k){var j=Colors.decode(i,h,l,k);if(j){this.r=j.r;this.g=j.g;this.b=j.b;this.a=j.a}};d.prototype={toString:function(){return Colors.encode(this)},blend:function(){trace(\"blend\",this.r,this.g,this.b,this.a)}};return{_Oval:b,_Rect:a,_Color:d,_Path:e}};\r\n  /*   graphics.js */  var Graphics=function(c){var h=$(c);var q=$(h).get(0).getContext(\"2d\");var i=null;var l=\"rgb\";var e=\"origin\";var m={};var p={background:null,fill:null,stroke:null,width:0};var b={};var g={font:\"sans-serif\",size:12,align:\"left\",color:Colors.decode(\"black\"),alpha:1,baseline:\"ideographic\"};var k=[];var o=Primitives(q,p,g);var f=o._Oval;var n=o._Rect;var d=o._Color;var a=o._Path;var j={init:function(){if(!q){return null}return j},size:function(s,r){if(!isNaN(s)&&!isNaN(r)){h.attr({width:s,height:r})}return{width:h.attr(\"width\"),height:h.attr(\"height\")}},clear:function(r,u,s,t){if(arguments.length<4){r=0;u=0;s=h.attr(\"width\");t=h.attr(\"height\")}q.clearRect(r,u,s,t);if(p.background!==null){q.save();q.fillStyle=Colors.encode(p.background);q.fillRect(r,u,s,t);q.restore()}},background:function(s,r,v,t){if(s==null){p.background=null;return null}var u=Colors.decode(s,r,v,t);if(u){p.background=u;j.clear()}},noFill:function(){p.fill=null},fill:function(s,r,v,t){if(arguments.length==0){return p.fill}else{if(arguments.length>0){var u=Colors.decode(s,r,v,t);p.fill=u;q.fillStyle=Colors.encode(u)}}},noStroke:function(){p.stroke=null;q.strokeStyle=null},stroke:function(s,r,v,u){if(arguments.length==0&&p.stroke!==null){return p.stroke}else{if(arguments.length>0){var t=Colors.decode(s,r,v,u);p.stroke=t;q.strokeStyle=Colors.encode(t)}}},strokeWidth:function(r){if(r===undefined){return q.lineWidth}q.lineWidth=p.width=r},Color:function(r){return new d(r)},drawStyle:function(s){if(arguments.length==0){return objcopy(p)}if(arguments.length==2){var r=arguments[0];var v=arguments[1];if(typeof r==\"string\"&&typeof v==\"object\"){var u={};if(v.color!==undefined){var t=Colors.decode(v.color);if(t){u.color=t}}$.each(\"background fill stroke width\".split(\" \"),function(w,x){if(v[x]!==undefined){u[x]=v[x]}});if(!$.isEmptyObject(u)){m[r]=u}}return}if(arguments.length==1&&m[arguments[0]]!==undefined){s=m[arguments[0]]}if(s.width!==undefined){p.width=s.width}q.lineWidth=p.width;$.each(\"background fill stroke\",function(y,x){if(s[x]!==undefined){if(s[x]===null){p[x]=null}else{var w=Colors.decode(s[x]);if(w){p[x]=w}}}});q.fillStyle=p.fill;q.strokeStyle=p.stroke},textStyle:function(s){if(arguments.length==0){return objcopy(g)}if(arguments.length==2){var r=arguments[0];var v=arguments[1];if(typeof r==\"string\"&&typeof v==\"object\"){var u={};if(v.color!==undefined){var t=Colors.decode(v.color);if(t){u.color=t}}$.each(\"font size align baseline alpha\".split(\" \"),function(w,x){if(v[x]!==undefined){u[x]=v[x]}});if(!$.isEmptyObject(u)){b[r]=u}}return}if(arguments.length==1&&b[arguments[0]]!==undefined){s=b[arguments[0]]}if(s.font!==undefined){g.font=s.font}if(s.size!==undefined){g.size=s.size}q.font=nano(\"{size}px {font}\",g);if(s.align!==undefined){q.textAlign=g.align=s.align}if(s.baseline!==undefined){q.textBaseline=g.baseline=s.baseline}if(s.alpha!==undefined){g.alpha=s.alpha}if(s.color!==undefined){var t=Colors.decode(s.color);if(t){g.color=t}}if(g.color){var t=Colors.blend(g.color,g.alpha);if(t){q.fillStyle=t}}},text:function(s,r,z,v){if(arguments.length>=3&&!isNaN(r)){v=v||{};v.x=r;v.y=z}else{if(arguments.length==2&&typeof(r)==\"object\"){v=r}else{v=v||{}}}var u=objmerge(g,v);q.save();if(u.align!==undefined){q.textAlign=u.align}if(u.baseline!==undefined){q.textBaseline=u.baseline}if(u.font!==undefined&&!isNaN(u.size)){q.font=nano(\"{size}px {font}\",u)}var w=(u.alpha!==undefined)?u.alpha:g.alpha;var t=(u.color!==undefined)?u.color:g.color;q.fillStyle=Colors.blend(t,w);if(w>0){q.fillText(s,Math.round(u.x),u.y)}q.restore()},textWidth:function(r,t){t=objmerge(g,t||{});q.save();q.font=nano(\"{size}px {font}\",t);var s=q.measureText(r).width;q.restore();return s},Rect:function(s,A,t,v,z,u){return new n(s,A,t,v,z,u)},rect:function(s,A,t,v,z,u){n.prototype._draw(s,A,t,v,z,u)},Oval:function(r,v,s,u,t){return new f(r,v,s,u,t)},oval:function(r,v,s,u,t){t=t||{};f.prototype._draw(r,v,s,u,t)},line:function(s,v,r,t,u){var w=new a(s,v,r,t);w.draw(u)},lines:function(s,u,r,t){if(typeof t==\"number\"){k.push([{x:s,y:u},{x:r,y:t}])}else{k.push([s,u])}},drawLines:function(r){var s=new a(k);s.draw(r);k=[]}};return j.init()};\r\n\r\n  arbor = (typeof(arbor)!=='undefined') ? arbor : {}\r\n  $.extend(arbor, {\r\n    // object constructor (don't use ‘new’, just call it)\r\n    Graphics:function(ctx){ return Graphics(ctx) },\r\n\r\n    // useful methods for dealing with the r/g/b\r\n    colors:{\r\n      CSS:Colors.CSS,           // dict:{colorname:\"#fef2e2\", ...}\r\n      validate:Colors.validate, // ƒ(str) -> t/f\r\n      decode:Colors.decode,     // ƒ(hexString_or_cssColor) -> {r,g,b,a}\r\n      encode:Colors.encode,     // ƒ({r,g,b,a}) -> hexOrRgbaString\r\n      blend:Colors.blend        // ƒ(color, opacity) -> rgbaString\r\n    }\r\n  })\r\n  \r\n})(this.jQuery)"]],"start1":0,"start2":0,"length1":0,"length2":16018}]],"length":16018,"saved":false}
{"ts":1364365832332,"patch":[[{"diffs":[[0,"//"],[-1,"\r\n//  arbor-graphics.js\r\n//  canvas fructose\r\n//\r\n//  Copyright (c) 2012 Samizdat Drafting Co.\r\n// \r\n//  Permission is hereby granted, free of charge, to any person\r\n//  obtaining a copy of this software and associated documentation\r\n//  files (the \"Software\"), to deal in the Software without\r\n//  restriction, including without limitation the rights to use,\r\n//  copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//  copies of the Software, and to permit persons to whom the\r\n//  Software is furnished to do so, subject to the following\r\n//  conditions:\r\n// \r\n//  The above copyright notice and this permission notice shall be\r\n//  included in all copies or substantial portions of the Software.\r\n// \r\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n//  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n//  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n//  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n//  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n//  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n//  OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n\r\n(function($){\r\n\r\n  /*        etc.js */  var trace=function(msg){if(typeof(window)==\"undefined\"||!window.console){return}var len=arguments.length;var args=[];for(var i=0;i<len;i++){args.push(\"arguments[\"+i+\"]\")}eval(\"console.log(\"+args.join(\",\")+\")\")};var dirname=function(a){var b=a.replace(/^\\/?(.*?)\\/?$/,\"$1\").split(\"/\");b.pop();return\"/\"+b.join(\"/\")};var basename=function(b){var c=b.replace(/^\\/?(.*?)\\/?$/,\"$1\").split(\"/\");var a=c.pop();if(a==\"\"){return null}else{return a}};var _ordinalize_re=/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g;var ordinalize=function(a){var b=\"\"+a;if(a<11000){b=(\"\"+a).replace(_ordinalize_re,\"$1,\")}else{if(a<1000000){b=Math.floor(a/1000)+\"k\"}else{if(a<1000000000){b=(\"\"+Math.floor(a/1000)).replace(_ordinalize_re,\"$1,\")+\"m\"}}}return b};var nano=function(a,b){return a.replace(/\\{([\\w\\-\\.]*)}/g,function(f,c){var d=c.split(\".\"),e=b[d.shift()];$.each(d,function(){if(e.hasOwnProperty(this)){e=e[this]}else{e=f}});return e})};var objcopy=function(a){if(a===undefined){return undefined}if(a===null){return null}if(a.parentNode){return a}switch(typeof a){case\"string\":return a.substring(0);break;case\"number\":return a+0;break;case\"boolean\":return a===true;break}var b=($.isArray(a))?[]:{};$.each(a,function(d,c){b[d]=objcopy(c)});return b};var objmerge=function(d,b){d=d||{};b=b||{};var c=objcopy(d);for(var a in b){c[a]=b[a]}return c};var objcmp=function(e,c,d){if(!e||!c){return e===c}if(typeof e!=typeof c){return false}if(typeof e!=\"object\"){return e===c}else{if($.isArray(e)){if(!($.isArray(c))){return false}if(e.length!=c.length){return false}}else{var h=[];for(var f in e){if(e.hasOwnProperty(f)){h.push(f)}}var g=[];for(var f in c){if(c.hasOwnProperty(f)){g.push(f)}}if(!d){h.sort();g.sort()}if(h.join(\",\")!==g.join(\",\")){return false}}var i=true;$.each(e,function(a){var b=objcmp(e[a],c[a]);i=i&&b;if(!i){return false}});return i}};var objkeys=function(b){var a=[];$.each(b,function(d,c){if(b.hasOwnProperty(d)){a.push(d)}});return a};var objcontains=function(c){if(!c||typeof c!=\"object\"){return false}for(var b=1,a=arguments.length;b<a;b++){if(c.hasOwnProperty(arguments[b])){return true}}return false};var uniq=function(b){var a=b.length;var d={};for(var c=0;c<a;c++){d[b[c]]=true}return objkeys(d)};var arbor_path=function(){var a=$(\"script\").map(function(b){var c=$(this).attr(\"src\");if(!c){return}if(c.match(/arbor[^\\/\\.]*.js|dev.js/)){return c.match(/.*\\//)||\"/\"}});if(a.length>0){return a[0]}else{return null}};\r\n  /*     colors.js */  var Colors=(function(){var f=/#[0-9a-f]{6}/i;var b=/#(..)(..)(..)/;var c=function(h){var g=h.toString(16);return(g.length==2)?g:\"0\"+g};var a=function(g){return parseInt(g,16)};var d=function(g){if(!g||typeof g!=\"object\"){return false}var h=objkeys(g).sort().join(\"\");if(h==\"abgr\"){return true}};var e={CSS:{aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgrey:\"#a9a9a9\",darkgreen:\"#006400\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",grey:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgrey:\"#d3d3d3\",lightgreen:\"#90ee90\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370d8\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#d87093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"},decode:function(h){var g=arguments.length;for(var l=g-1;l>=0;l--){if(arguments[l]===undefined){g--}}var k=arguments;if(!h){return null}if(g==1&&d(h)){return h}var j=null;if(typeof h==\"string\"){var o=1;if(g==2){o=k[1]}var n=e.CSS[h.toLowerCase()];if(n!==undefined){h=n}var m=h.match(f);if(m){vals=h.match(b);if(!vals||!vals.length||vals.length!=4){return null}j={r:a(vals[1]),g:a(vals[2]),b:a(vals[3]),a:o}}}else{if(typeof h==\"number\"){if(g>=3){j={r:k[0],g:k[1],b:k[2],a:1};if(g>=4){j.a*=k[3]}}else{if(g>=1){j={r:k[0],g:k[0],b:k[0],a:1};if(g==2){j.a*=k[1]}}}}}return j},validate:function(g){if(!g||typeof g!=\"string\"){return false}if(e.CSS[g.toLowerCase()]!==undefined){return true}if(g.match(f)){return true}return false},mix:function(h,g,k){var j=e.decode(h);var i=e.decode(g)},blend:function(g,j){j=(j!==undefined)?Math.max(0,Math.min(1,j)):1;var h=e.decode(g);if(!h){return null}if(j==1){return g}var h=g;if(typeof g==\"string\"){h=e.decode(g)}var i=objcopy(h);i.a*=j;return nano(\"rgba({r},{g},{b},{a})\",i)},encode:function(g){if(!d(g)){g=e.decode(g);if(!d(g)){return null}}if(g.a==1){return nano(\"#{r}{g}{b}\",{r:c(g.r),g:c(g.g),b:c(g.b)})}else{return nano(\"rgba({r},{g},{b},{a})\",g)}}};return e})();\r\n  /* primitives.js */  var Primitives=function(c,f,g){var b=function(i,m,j,l,k){this.x=i;this.y=m;this.w=j;this.h=l;this.style=(k!==undefined)?k:{}};b.prototype={draw:function(h){this._draw(h)},_draw:function(i,n,j,l,k){if(objcontains(i,\"stroke\",\"fill\",\"width\")){k=i}if(this.x!==undefined){i=this.x,n=this.y,j=this.w,l=this.h;k=objmerge(this.style,k)}k=objmerge(f,k);if(!k.stroke&&!k.fill){return}var m=0.5522848;ox=(j/2)*m,oy=(l/2)*m,xe=i+j,ye=n+l,xm=i+j/2,ym=n+l/2;c.save();c.beginPath();c.moveTo(i,ym);c.bezierCurveTo(i,ym-oy,xm-ox,n,xm,n);c.bezierCurveTo(xm+ox,n,xe,ym-oy,xe,ym);c.bezierCurveTo(xe,ym+oy,xm+ox,ye,xm,ye);c.bezierCurveTo(xm-ox,ye,i,ym+oy,i,ym);c.closePath();if(k.fill!==null){if(k.alpha!==undefined){c.fillStyle=Colors.blend(k.fill,k.alpha)}else{c.fillStyle=Colors.encode(k.fill)}c.fill()}if(k.stroke!==null){c.strokeStyle=Colors.encode(k.stroke);if(!isNaN(k.width)){c.lineWidth=k.width}c.stroke()}c.restore()}};var a=function(i,n,j,l,m,k){if(objcontains(m,\"stroke\",\"fill\",\"width\")){k=m;m=0}this.x=i;this.y=n;this.w=j;this.h=l;this.r=(m!==undefined)?m:0;this.style=(k!==undefined)?k:{}};a.prototype={draw:function(h){this._draw(h)},_draw:function(j,o,k,m,n,l){if(objcontains(n,\"stroke\",\"fill\",\"width\",\"alpha\")){l=n;n=0}else{if(objcontains(j,\"stroke\",\"fill\",\"width\",\"alpha\")){l=j}}if(this.x!==undefined){j=this.x,o=this.y,k=this.w,m=this.h;l=objmerge(this.style,l)}l=objmerge(f,l);if(!l.stroke&&!l.fill){return}var i=(n>0);c.save();c.beginPath();c.moveTo(j+n,o);c.lineTo(j+k-n,o);if(i){c.quadraticCurveTo(j+k,o,j+k,o+n)}c.lineTo(j+k,o+m-n);if(i){c.quadraticCurveTo(j+k,o+m,j+k-n,o+m)}c.lineTo(j+n,o+m);if(i){c.quadraticCurveTo(j,o+m,j,o+m-n)}c.lineTo(j,o+n);if(i){c.quadraticCurveTo(j,o,j+n,o)}if(l.fill!==null){if(l.alpha!==undefined){c.fillStyle=Colors.blend(l.fill,l.alpha)}else{c.fillStyle=Colors.encode(l.fill)}c.fill()}if(l.stroke!==null){c.strokeStyle=Colors.encode(l.stroke);if(!isNaN(l.width)){c.lineWidth=l.width}c.stroke()}c.restore()}};var e=function(i,l,h,j,k){if(k!==undefined||typeof j==\"number\"){this.points=[{x:i,y:l},{x:h,y:j}];this.style=k||{}}else{if($.isArray(i)){this.points=i;this.style=l||{}}else{this.points=[i,l];this.style=h||{}}}};e.prototype={draw:function(h){if(this.points.length<2){return}var j=[];if(!$.isArray(this.points[0])){j.push(this.points)}else{j=this.points}c.save();c.beginPath();$.each(j,function(n,m){c.moveTo(m[0].x+0.5,m[0].y+0.5);$.each(m,function(o,p){if(o==0){return}c.lineTo(p.x+0.5,p.y+0.5)})});var i=$.extend(objmerge(f,this.style),h);if(i.closed){c.closePath()}if(i.fill!==undefined){var l=Colors.decode(i.fill,(i.alpha!==undefined)?i.alpha:1);if(l){c.fillStyle=Colors.encode(l)}c.fill()}if(i.stroke!==undefined){var k=Colors.decode(i.stroke,(i.alpha!==undefined)?i.alpha:1);if(k){c.strokeStyle=Colors.encode(k)}if(!isNaN(i.width)){c.lineWidth=i.width}c.stroke()}c.restore()}};var d=function(i,h,l,k){var j=Colors.decode(i,h,l,k);if(j){this.r=j.r;this.g=j.g;this.b=j.b;this.a=j.a}};d.prototype={toString:function(){return Colors.encode(this)},blend:function(){trace(\"blend\",this.r,this.g,this.b,this.a)}};return{_Oval:b,_Rect:a,_Color:d,_Path:e}};\r\n  /*   graphics.js */  var Graphics=function(c){var h=$(c);var q=$(h).get(0).getContext(\"2d\");var i=null;var l=\"rgb\";var e=\"origin\";var m={};var p={background:null,fill:null,stroke:null,width:0};var b={};var g={font:\"sans-serif\",size:12,align:\"left\",color:Colors.decode(\"black\"),alpha:1,baseline:\"ideographic\"};var k=[];var o=Primitives(q,p,g);var f=o._Oval;var n=o._Rect;var d=o._Color;var a=o._Path;var j={init:function(){if(!q){return null}return j},size:function(s,r){if(!isNaN(s)&&!isNaN(r)){h.attr({width:s,height:r})}return{width:h.attr(\"width\"),height:h.attr(\"height\")}},clear:function(r,u,s,t){if(arguments.length<4){r=0;u=0;s=h.attr(\"width\");t=h.attr(\"height\")}q.clearRect(r,u,s,t);if(p.background!==null){q.save();q.fillStyle=Colors.encode(p.background);q.fillRect(r,u,s,t);q.restore()}},background:function(s,r,v,t){if(s==null){p.background=null;return null}var u=Colors.decode(s,r,v,t);if(u){p.background=u;j.clear()}},noFill:function(){p.fill=null},fill:function(s,r,v,t){if(arguments.length==0){return p.fill}else{if(arguments.length>0){var u=Colors.decode(s,r,v,t);p.fill=u;q.fillStyle=Colors.encode(u)}}},noStroke:function(){p.stroke=null;q.strokeStyle=null},stroke:function(s,r,v,u){if(arguments.length==0&&p.stroke!==null){return p.stroke}else{if(arguments.length>0){var t=Colors.decode(s,r,v,u);p.stroke=t;q.strokeStyle=Colors.encode(t)}}},strokeWidth:function(r){if(r===undefined){return q.lineWidth}q.lineWidth=p.width=r},Color:function(r){return new d(r)},drawStyle:function(s){if(arguments.length==0){return objcopy(p)}if(arguments.length==2){var r=arguments[0];var v=arguments[1];if(typeof r==\"string\"&&typeof v==\"object\"){var u={};if(v.color!==undefined){var t=Colors.decode(v.color);if(t){u.color=t}}$.each(\"background fill stroke width\".split(\" \"),function(w,x){if(v[x]!==undefined){u[x]=v[x]}});if(!$.isEmptyObject(u)){m[r]=u}}return}if(arguments.length==1&&m[arguments[0]]!==undefined){s=m[arguments[0]]}if(s.width!==undefined){p.width=s.width}q.lineWidth=p.width;$.each(\"background fill stroke\",function(y,x){if(s[x]!==undefined){if(s[x]===null){p[x]=null}else{var w=Colors.decode(s[x]);if(w){p[x]=w}}}});q.fillStyle=p.fill;q.strokeStyle=p.stroke},textStyle:function(s){if(arguments.length==0){return objcopy(g)}if(arguments.length==2){var r=arguments[0];var v=arguments[1];if(typeof r==\"string\"&&typeof v==\"object\"){var u={};if(v.color!==undefined){var t=Colors.decode(v.color);if(t){u.color=t}}$.each(\"font size align baseline alpha\".split(\" \"),function(w,x){if(v[x]!==undefined){u[x]=v[x]}});if(!$.isEmptyObject(u)){b[r]=u}}return}if(arguments.length==1&&b[arguments[0]]!==undefined){s=b[arguments[0]]}if(s.font!==undefined){g.font=s.font}if(s.size!==undefined){g.size=s.size}q.font=nano(\"{size}px {font}\",g);if(s.align!==undefined){q.textAlign=g.align=s.align}if(s.baseline!==undefined){q.textBaseline=g.baseline=s.baseline}if(s.alpha!==undefined){g.alpha=s.alpha}if(s.color!==undefined){var t=Colors.decode(s.color);if(t){g.color=t}}if(g.color){var t=Colors.blend(g.color,g.alpha);if(t){q.fillStyle=t}}},text:function(s,r,z,v){if(arguments.length>=3&&!isNaN(r)){v=v||{};v.x=r;v.y=z}else{if(arguments.length==2&&typeof(r)==\"object\"){v=r}else{v=v||{}}}var u=objmerge(g,v);q.save();if(u.align!==undefined){q.textAlign=u.align}if(u.baseline!==undefined){q.textBaseline=u.baseline}if(u.font!==undefined&&!isNaN(u.size)){q.font=nano(\"{size}px {font}\",u)}var w=(u.alpha!==undefined)?u.alpha:g.alpha;var t=(u.color!==undefined)?u.color:g.color;q.fillStyle=Colors.blend(t,w);if(w>0){q.fillText(s,Math.round(u.x),u.y)}q.restore()},textWidth:function(r,t){t=objmerge(g,t||{});q.save();q.font=nano(\"{size}px {font}\",t);var s=q.measureText(r).width;q.restore();return s},Rect:function(s,A,t,v,z,u){return new n(s,A,t,v,z,u)},rect:function(s,A,t,v,z,u){n.prototype._draw(s,A,t,v,z,u)},Oval:function(r,v,s,u,t){return new f(r,v,s,u,t)},oval:function(r,v,s,u,t){t=t||{};f.prototype._draw(r,v,s,u,t)},line:function(s,v,r,t,u){var w=new a(s,v,r,t);w.draw(u)},lines:function(s,u,r,t){if(typeof t==\"number\"){k.push([{x:s,y:u},{x:r,y:t}])}else{k.push([s,u])}},drawLines:function(r){var s=new a(k);s.draw(r);k=[]}};return j.init()};\r\n\r\n  arbor = (typeof(arbor)!=='undefined') ? arbor : {}\r\n  $.extend(arbor, {\r\n    // object constructor (don't use ‘new’, just call it)\r\n    Graphics:function(ctx){ return Graphics(ctx) },\r\n\r\n    // useful methods for dealing with the r/g/b\r\n    colors:{\r\n      CSS:Colors.CSS,           // dict:{colorname:\"#fef2e2\", ...}\r\n      validate:Colors.validate, // ƒ(str) -> t/f\r\n      decode:Colors.decode,     // ƒ(hexString_or_cssColor) -> {r,g,b,a}\r\n      encode:Colors.encode,     // ƒ({r,g,b,a}) -> hexOrRgbaString\r\n      blend:Colors.blend        // ƒ(color, opacity) -> rgbaString\r\n    }\r\n  })\r\n  \r"],[1,"\n//  arbor-graphics.js\n//  canvas fructose\n//\n//  Copyright (c) 2012 Samizdat Drafting Co.\n// \n//  Permission is hereby granted, free of charge, to any person\n//  obtaining a copy of this software and associated documentation\n//  files (the \"Software\"), to deal in the Software without\n//  restriction, including without limitation the rights to use,\n//  copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the\n//  Software is furnished to do so, subject to the following\n//  conditions:\n// \n//  The above copyright notice and this permission notice shall be\n//  included in all copies or substantial portions of the Software.\n// \n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n//  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n//  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n//  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n//  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n//  OTHER DEALINGS IN THE SOFTWARE.\n//\n\n(function($) {\n\n    /*        etc.js */\n    var trace = function(msg) {\n        if (typeof(window) == \"undefined\" || !window.console) {\n            return\n        }\n        var len = arguments.length;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            args.push(\"arguments[\" + i + \"]\")\n        }\n        eval(\"console.log(\" + args.join(\",\") + \")\")\n    };\n    var dirname = function(a) {\n        var b = a.replace(/^\\/?(.*?)\\/?$/, \"$1\").split(\"/\");\n        b.pop();\n        return \"/\" + b.join(\"/\")\n    };\n    var basename = function(b) {\n        var c = b.replace(/^\\/?(.*?)\\/?$/, \"$1\").split(\"/\");\n        var a = c.pop();\n        if (a == \"\") {\n            return null\n        }\n        else {\n            return a\n        }\n    };\n    var _ordinalize_re = /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g;\n    var ordinalize = function(a) {\n        var b = \"\" + a;\n        if (a < 11000) {\n            b = (\"\" + a).replace(_ordinalize_re, \"$1,\")\n        }\n        else {\n            if (a < 1000000) {\n                b = Math.floor(a / 1000) + \"k\"\n            }\n            else {\n                if (a < 1000000000) {\n                    b = (\"\" + Math.floor(a / 1000)).replace(_ordinalize_re, \"$1,\") + \"m\"\n                }\n            }\n        }\n        return b\n    };\n    var nano = function(a, b) {\n        return a.replace(/\\{([\\w\\-\\.]*)}/g, function(f, c) {\n            var d = c.split(\".\"),\n                e = b[d.shift()];\n            $.each(d, function() {\n                if (e.hasOwnProperty(this)) {\n                    e = e[this]\n                }\n                else {\n                    e = f\n                }\n            });\n            return e\n        })\n    };\n    var objcopy = function(a) {\n        if (a === undefined) {\n            return undefined\n        }\n        if (a === null) {\n            return null\n        }\n        if (a.parentNode) {\n            return a\n        }\n        switch (typeof a) {\n        case \"string\":\n            return a.substring(0);\n            break;\n        case \"number\":\n            return a + 0;\n            break;\n        case \"boolean\":\n            return a === true;\n            break\n        }\n        var b = ($.isArray(a)) ? [] : {};\n        $.each(a, function(d, c) {\n            b[d] = objcopy(c)\n        });\n        return b\n    };\n    var objmerge = function(d, b) {\n        d = d || {};\n        b = b || {};\n        var c = objcopy(d);\n        for (var a in b) {\n            c[a] = b[a]\n        }\n        return c\n    };\n    var objcmp = function(e, c, d) {\n        if (!e || !c) {\n            return e === c\n        }\n        if (typeof e != typeof c) {\n            return false\n        }\n        if (typeof e != \"object\") {\n            return e === c\n        }\n        else {\n            if ($.isArray(e)) {\n                if (!($.isArray(c))) {\n                    return false\n                }\n                if (e.length != c.length) {\n                    return false\n                }\n            }\n            else {\n                var h = [];\n                for (var f in e) {\n                    if (e.hasOwnProperty(f)) {\n                        h.push(f)\n                    }\n                }\n                var g = [];\n                for (var f in c) {\n                    if (c.hasOwnProperty(f)) {\n                        g.push(f)\n                    }\n                }\n                if (!d) {\n                    h.sort();\n                    g.sort()\n                }\n                if (h.join(\",\") !== g.join(\",\")) {\n                    return false\n                }\n            }\n            var i = true;\n            $.each(e, function(a) {\n                var b = objcmp(e[a], c[a]);\n                i = i && b;\n                if (!i) {\n                    return false\n                }\n            });\n            return i\n        }\n    };\n    var objkeys = function(b) {\n        var a = [];\n        $.each(b, function(d, c) {\n            if (b.hasOwnProperty(d)) {\n                a.push(d)\n            }\n        });\n        return a\n    };\n    var objcontains = function(c) {\n        if (!c || typeof c != \"object\") {\n            return false\n        }\n        for (var b = 1, a = arguments.length; b < a; b++) {\n            if (c.hasOwnProperty(arguments[b])) {\n                return true\n            }\n        }\n        return false\n    };\n    var uniq = function(b) {\n        var a = b.length;\n        var d = {};\n        for (var c = 0; c < a; c++) {\n            d[b[c]] = true\n        }\n        return objkeys(d)\n    };\n    var arbor_path = function() {\n        var a = $(\"script\").map(function(b) {\n            var c = $(this).attr(\"src\");\n            if (!c) {\n                return\n            }\n            if (c.match(/arbor[^\\/\\.]*.js|dev.js/)) {\n                return c.match(/.*\\//) || \"/\"\n            }\n        });\n        if (a.length > 0) {\n            return a[0]\n        }\n        else {\n            return null\n        }\n    };\n    /*     colors.js */\n    var Colors = (function() {\n        var f = /#[0-9a-f]{6}/i;\n        var b = /#(..)(..)(..)/;\n        var c = function(h) {\n            var g = h.toString(16);\n            return (g.length == 2) ? g : \"0\" + g\n        };\n        var a = function(g) {\n            return parseInt(g, 16)\n        };\n        var d = function(g) {\n            if (!g || typeof g != \"object\") {\n                return false\n            }\n            var h = objkeys(g).sort().join(\"\");\n            if (h == \"abgr\") {\n                return true\n            }\n        };\n        var e = {\n            CSS: {\n                aliceblue: \"#f0f8ff\",\n                antiquewhite: \"#faebd7\",\n                aqua: \"#00ffff\",\n                aquamarine: \"#7fffd4\",\n                azure: \"#f0ffff\",\n                beige: \"#f5f5dc\",\n                bisque: \"#ffe4c4\",\n                black: \"#000000\",\n                blanchedalmond: \"#ffebcd\",\n                blue: \"#0000ff\",\n                blueviolet: \"#8a2be2\",\n                brown: \"#a52a2a\",\n                burlywood: \"#deb887\",\n                cadetblue: \"#5f9ea0\",\n                chartreuse: \"#7fff00\",\n                chocolate: \"#d2691e\",\n                coral: \"#ff7f50\",\n                cornflowerblue: \"#6495ed\",\n                cornsilk: \"#fff8dc\",\n                crimson: \"#dc143c\",\n                cyan: \"#00ffff\",\n                darkblue: \"#00008b\",\n                darkcyan: \"#008b8b\",\n                darkgoldenrod: \"#b8860b\",\n                darkgray: \"#a9a9a9\",\n                darkgrey: \"#a9a9a9\",\n                darkgreen: \"#006400\",\n                darkkhaki: \"#bdb76b\",\n                darkmagenta: \"#8b008b\",\n                darkolivegreen: \"#556b2f\",\n                darkorange: \"#ff8c00\",\n                darkorchid: \"#9932cc\",\n                darkred: \"#8b0000\",\n                darksalmon: \"#e9967a\",\n                darkseagreen: \"#8fbc8f\",\n                darkslateblue: \"#483d8b\",\n                darkslategray: \"#2f4f4f\",\n                darkslategrey: \"#2f4f4f\",\n                darkturquoise: \"#00ced1\",\n                darkviolet: \"#9400d3\",\n                deeppink: \"#ff1493\",\n                deepskyblue: \"#00bfff\",\n                dimgray: \"#696969\",\n                dimgrey: \"#696969\",\n                dodgerblue: \"#1e90ff\",\n                firebrick: \"#b22222\",\n                floralwhite: \"#fffaf0\",\n                forestgreen: \"#228b22\",\n                fuchsia: \"#ff00ff\",\n                gainsboro: \"#dcdcdc\",\n                ghostwhite: \"#f8f8ff\",\n                gold: \"#ffd700\",\n                goldenrod: \"#daa520\",\n                gray: \"#808080\",\n                grey: \"#808080\",\n                green: \"#008000\",\n                greenyellow: \"#adff2f\",\n                honeydew: \"#f0fff0\",\n                hotpink: \"#ff69b4\",\n                indianred: \"#cd5c5c\",\n                indigo: \"#4b0082\",\n                ivory: \"#fffff0\",\n                khaki: \"#f0e68c\",\n                lavender: \"#e6e6fa\",\n                lavenderblush: \"#fff0f5\",\n                lawngreen: \"#7cfc00\",\n                lemonchiffon: \"#fffacd\",\n                lightblue: \"#add8e6\",\n                lightcoral: \"#f08080\",\n                lightcyan: \"#e0ffff\",\n                lightgoldenrodyellow: \"#fafad2\",\n                lightgray: \"#d3d3d3\",\n                lightgrey: \"#d3d3d3\",\n                lightgreen: \"#90ee90\",\n                lightpink: \"#ffb6c1\",\n                lightsalmon: \"#ffa07a\",\n                lightseagreen: \"#20b2aa\",\n                lightskyblue: \"#87cefa\",\n                lightslategray: \"#778899\",\n                lightslategrey: \"#778899\",\n                lightsteelblue: \"#b0c4de\",\n                lightyellow: \"#ffffe0\",\n                lime: \"#00ff00\",\n                limegreen: \"#32cd32\",\n                linen: \"#faf0e6\",\n                magenta: \"#ff00ff\",\n                maroon: \"#800000\",\n                mediumaquamarine: \"#66cdaa\",\n                mediumblue: \"#0000cd\",\n                mediumorchid: \"#ba55d3\",\n                mediumpurple: \"#9370d8\",\n                mediumseagreen: \"#3cb371\",\n                mediumslateblue: \"#7b68ee\",\n                mediumspringgreen: \"#00fa9a\",\n                mediumturquoise: \"#48d1cc\",\n                mediumvioletred: \"#c71585\",\n                midnightblue: \"#191970\",\n                mintcream: \"#f5fffa\",\n                mistyrose: \"#ffe4e1\",\n                moccasin: \"#ffe4b5\",\n                navajowhite: \"#ffdead\",\n                navy: \"#000080\",\n                oldlace: \"#fdf5e6\",\n                olive: \"#808000\",\n                olivedrab: \"#6b8e23\",\n                orange: \"#ffa500\",\n                orangered: \"#ff4500\",\n                orchid: \"#da70d6\",\n                palegoldenrod: \"#eee8aa\",\n                palegreen: \"#98fb98\",\n                paleturquoise: \"#afeeee\",\n                palevioletred: \"#d87093\",\n                papayawhip: \"#ffefd5\",\n                peachpuff: \"#ffdab9\",\n                peru: \"#cd853f\",\n                pink: \"#ffc0cb\",\n                plum: \"#dda0dd\",\n                powderblue: \"#b0e0e6\",\n                purple: \"#800080\",\n                red: \"#ff0000\",\n                rosybrown: \"#bc8f8f\",\n                royalblue: \"#4169e1\",\n                saddlebrown: \"#8b4513\",\n                salmon: \"#fa8072\",\n                sandybrown: \"#f4a460\",\n                seagreen: \"#2e8b57\",\n                seashell: \"#fff5ee\",\n                sienna: \"#a0522d\",\n                silver: \"#c0c0c0\",\n                skyblue: \"#87ceeb\",\n                slateblue: \"#6a5acd\",\n                slategray: \"#708090\",\n                slategrey: \"#708090\",\n                snow: \"#fffafa\",\n                springgreen: \"#00ff7f\",\n                steelblue: \"#4682b4\",\n                tan: \"#d2b48c\",\n                teal: \"#008080\",\n                thistle: \"#d8bfd8\",\n                tomato: \"#ff6347\",\n                turquoise: \"#40e0d0\",\n                violet: \"#ee82ee\",\n                wheat: \"#f5deb3\",\n                white: \"#ffffff\",\n                whitesmoke: \"#f5f5f5\",\n                yellow: \"#ffff00\",\n                yellowgreen: \"#9acd32\"\n            },\n            decode: function(h) {\n                var g = arguments.length;\n                for (var l = g - 1; l >= 0; l--) {\n                    if (arguments[l] === undefined) {\n                        g--\n                    }\n                }\n                var k = arguments;\n                if (!h) {\n                    return null\n                }\n                if (g == 1 && d(h)) {\n                    return h\n                }\n                var j = null;\n                if (typeof h == \"string\") {\n                    var o = 1;\n                    if (g == 2) {\n                        o = k[1]\n                    }\n                    var n = e.CSS[h.toLowerCase()];\n                    if (n !== undefined) {\n                        h = n\n                    }\n                    var m = h.match(f);\n                    if (m) {\n                        vals = h.match(b);\n                        if (!vals || !vals.length || vals.length != 4) {\n                            return null\n                        }\n                        j = {\n                            r: a(vals[1]),\n                            g: a(vals[2]),\n                            b: a(vals[3]),\n                            a: o\n                        }\n                    }\n                }\n                else {\n                    if (typeof h == \"number\") {\n                        if (g >= 3) {\n                            j = {\n                                r: k[0],\n                                g: k[1],\n                                b: k[2],\n                                a: 1\n                            };\n                            if (g >= 4) {\n                                j.a *= k[3]\n                            }\n                        }\n                        else {\n                            if (g >= 1) {\n                                j = {\n                                    r: k[0],\n                                    g: k[0],\n                                    b: k[0],\n                                    a: 1\n                                };\n                                if (g == 2) {\n                                    j.a *= k[1]\n                                }\n                            }\n                        }\n                    }\n                }\n                return j\n            },\n            validate: function(g) {\n                if (!g || typeof g != \"string\") {\n                    return false\n                }\n                if (e.CSS[g.toLowerCase()] !== undefined) {\n                    return true\n                }\n                if (g.match(f)) {\n                    return true\n                }\n                return false\n            },\n            mix: function(h, g, k) {\n                var j = e.decode(h);\n                var i = e.decode(g)\n            },\n            blend: function(g, j) {\n                j = (j !== undefined) ? Math.max(0, Math.min(1, j)) : 1;\n                var h = e.decode(g);\n                if (!h) {\n                    return null\n                }\n                if (j == 1) {\n                    return g\n                }\n                var h = g;\n                if (typeof g == \"string\") {\n                    h = e.decode(g)\n                }\n                var i = objcopy(h);\n                i.a *= j;\n                return nano(\"rgba({r},{g},{b},{a})\", i)\n            },\n            encode: function(g) {\n                if (!d(g)) {\n                    g = e.decode(g);\n                    if (!d(g)) {\n                        return null\n                    }\n                }\n                if (g.a == 1) {\n                    return nano(\"#{r}{g}{b}\", {\n                        r: c(g.r),\n                        g: c(g.g),\n                        b: c(g.b)\n                    })\n                }\n                else {\n                    return nano(\"rgba({r},{g},{b},{a})\", g)\n                }\n            }\n        };\n        return e\n    })();\n    /* primitives.js */\n    var Primitives = function(c, f, g) {\n        var b = function(i, m, j, l, k) {\n            this.x = i;\n            this.y = m;\n            this.w = j;\n            this.h = l;\n            this.style = (k !== undefined) ? k : {}\n        };\n        b.prototype = {\n            draw: function(h) {\n                this._draw(h)\n            },\n            _draw: function(i, n, j, l, k) {\n                if (objcontains(i, \"stroke\", \"fill\", \"width\")) {\n                    k = i\n                }\n                if (this.x !== undefined) {\n                    i = this.x, n = this.y, j = this.w, l = this.h;\n                    k = objmerge(this.style, k)\n                }\n                k = objmerge(f, k);\n                if (!k.stroke && !k.fill) {\n                    return\n                }\n                var m = 0.5522848;\n                ox = (j / 2) * m, oy = (l / 2) * m, xe = i + j, ye = n + l, xm = i + j / 2, ym = n + l / 2;\n                c.save();\n                c.beginPath();\n                c.moveTo(i, ym);\n                c.bezierCurveTo(i, ym - oy, xm - ox, n, xm, n);\n                c.bezierCurveTo(xm + ox, n, xe, ym - oy, xe, ym);\n                c.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                c.bezierCurveTo(xm - ox, ye, i, ym + oy, i, ym);\n                c.closePath();\n                if (k.fill !== null) {\n                    if (k.alpha !== undefined) {\n                        c.fillStyle = Colors.blend(k.fill, k.alpha)\n                    }\n                    else {\n                        c.fillStyle = Colors.encode(k.fill)\n                    }\n                    c.fill()\n                }\n                if (k.stroke !== null) {\n                    c.strokeStyle = Colors.encode(k.stroke);\n                    if (!isNaN(k.width)) {\n                        c.lineWidth = k.width\n                    }\n                    c.stroke()\n                }\n                c.restore()\n            }\n        };\n        var a = function(i, n, j, l, m, k) {\n            if (objcontains(m, \"stroke\", \"fill\", \"width\")) {\n                k = m;\n                m = 0\n            }\n            this.x = i;\n            this.y = n;\n            this.w = j;\n            this.h = l;\n            this.r = (m !== undefined) ? m : 0;\n            this.style = (k !== undefined) ? k : {}\n        };\n        a.prototype = {\n            draw: function(h) {\n                this._draw(h)\n            },\n            _draw: function(j, o, k, m, n, l) {\n                if (objcontains(n, \"stroke\", \"fill\", \"width\", \"alpha\")) {\n                    l = n;\n                    n = 0\n                }\n                else {\n                    if (objcontains(j, \"stroke\", \"fill\", \"width\", \"alpha\")) {\n                        l = j\n                    }\n                }\n                if (this.x !== undefined) {\n                    j = this.x, o = this.y, k = this.w, m = this.h;\n                    l = objmerge(this.style, l)\n                }\n                l = objmerge(f, l);\n                if (!l.stroke && !l.fill) {\n                    return\n                }\n                var i = (n > 0);\n                c.save();\n                c.beginPath();\n                c.moveTo(j + n, o);\n                c.lineTo(j + k - n, o);\n                if (i) {\n                    c.quadraticCurveTo(j + k, o, j + k, o + n)\n                }\n                c.lineTo(j + k, o + m - n);\n                if (i) {\n                    c.quadraticCurveTo(j + k, o + m, j + k - n, o + m)\n                }\n                c.lineTo(j + n, o + m);\n                if (i) {\n                    c.quadraticCurveTo(j, o + m, j, o + m - n)\n                }\n                c.lineTo(j, o + n);\n                if (i) {\n                    c.quadraticCurveTo(j, o, j + n, o)\n                }\n                if (l.fill !== null) {\n                    if (l.alpha !== undefined) {\n                        c.fillStyle = Colors.blend(l.fill, l.alpha)\n                    }\n                    else {\n                        c.fillStyle = Colors.encode(l.fill)\n                    }\n                    c.fill()\n                }\n                if (l.stroke !== null) {\n                    c.strokeStyle = Colors.encode(l.stroke);\n                    if (!isNaN(l.width)) {\n                        c.lineWidth = l.width\n                    }\n                    c.stroke()\n                }\n                c.restore()\n            }\n        };\n        var e = function(i, l, h, j, k) {\n            if (k !== undefined || typeof j == \"number\") {\n                this.points = [{\n                    x: i,\n                    y: l\n                }, {\n                    x: h,\n                    y: j\n                }];\n                this.style = k || {}\n            }\n            else {\n                if ($.isArray(i)) {\n                    this.points = i;\n                    this.style = l || {}\n                }\n                else {\n                    this.points = [i, l];\n                    this.style = h || {}\n                }\n            }\n        };\n        e.prototype = {\n            draw: function(h) {\n                if (this.points.length < 2) {\n                    return\n                }\n                var j = [];\n                if (!$.isArray(this.points[0])) {\n                    j.push(this.points)\n                }\n                else {\n                    j = this.points\n                }\n                c.save();\n                c.beginPath();\n                $.each(j, function(n, m) {\n                    c.moveTo(m[0].x + 0.5, m[0].y + 0.5);\n                    $.each(m, function(o, p) {\n                        if (o == 0) {\n                            return\n                        }\n                        c.lineTo(p.x + 0.5, p.y + 0.5)\n                    })\n                });\n                var i = $.extend(objmerge(f, this.style), h);\n                if (i.closed) {\n                    c.closePath()\n                }\n                if (i.fill !== undefined) {\n                    var l = Colors.decode(i.fill, (i.alpha !== undefined) ? i.alpha : 1);\n                    if (l) {\n                        c.fillStyle = Colors.encode(l)\n                    }\n                    c.fill()\n                }\n                if (i.stroke !== undefined) {\n                    var k = Colors.decode(i.stroke, (i.alpha !== undefined) ? i.alpha : 1);\n                    if (k) {\n                        c.strokeStyle = Colors.encode(k)\n                    }\n                    if (!isNaN(i.width)) {\n                        c.lineWidth = i.width\n                    }\n                    c.stroke()\n                }\n                c.restore()\n            }\n        };\n        var d = function(i, h, l, k) {\n            var j = Colors.decode(i, h, l, k);\n            if (j) {\n                this.r = j.r;\n                this.g = j.g;\n                this.b = j.b;\n                this.a = j.a\n            }\n        };\n        d.prototype = {\n            toString: function() {\n                return Colors.encode(this)\n            },\n            blend: function() {\n                trace(\"blend\", this.r, this.g, this.b, this.a)\n            }\n        };\n        return {\n            _Oval: b,\n            _Rect: a,\n            _Color: d,\n            _Path: e\n        }\n    };\n    /*   graphics.js */\n    var Graphics = function(c) {\n        var h = $(c);\n        var q = $(h).get(0).getContext(\"2d\");\n        var i = null;\n        var l = \"rgb\";\n        var e = \"origin\";\n        var m = {};\n        var p = {\n            background: null,\n            fill: null,\n            stroke: null,\n            width: 0\n        };\n        var b = {};\n        var g = {\n            font: \"sans-serif\",\n            size: 12,\n            align: \"left\",\n            color: Colors.decode(\"black\"),\n            alpha: 1,\n            baseline: \"ideographic\"\n        };\n        var k = [];\n        var o = Primitives(q, p, g);\n        var f = o._Oval;\n        var n = o._Rect;\n        var d = o._Color;\n        var a = o._Path;\n        var j = {\n            init: function() {\n                if (!q) {\n                    return null\n                }\n                return j\n            },\n            size: function(s, r) {\n                if (!isNaN(s) && !isNaN(r)) {\n                    h.attr({\n                        width: s,\n                        height: r\n                    })\n                }\n                return {\n                    width: h.attr(\"width\"),\n                    height: h.attr(\"height\")\n                }\n            },\n            clear: function(r, u, s, t) {\n                if (arguments.length < 4) {\n                    r = 0;\n                    u = 0;\n                    s = h.attr(\"width\");\n                    t = h.attr(\"height\")\n                }\n                q.clearRect(r, u, s, t);\n                if (p.background !== null) {\n                    q.save();\n                    q.fillStyle = Colors.encode(p.background);\n                    q.fillRect(r, u, s, t);\n                    q.restore()\n                }\n            },\n            background: function(s, r, v, t) {\n                if (s == null) {\n                    p.background = null;\n                    return null\n                }\n                var u = Colors.decode(s, r, v, t);\n                if (u) {\n                    p.background = u;\n                    j.clear()\n                }\n            },\n            noFill: function() {\n                p.fill = null\n            },\n            fill: function(s, r, v, t) {\n                if (arguments.length == 0) {\n                    return p.fill\n                }\n                else {\n                    if (arguments.length > 0) {\n                        var u = Colors.decode(s, r, v, t);\n                        p.fill = u;\n                        q.fillStyle = Colors.encode(u)\n                    }\n                }\n            },\n            noStroke: function() {\n                p.stroke = null;\n                q.strokeStyle = null\n            },\n            stroke: function(s, r, v, u) {\n                if (arguments.length == 0 && p.stroke !== null) {\n                    return p.stroke\n                }\n                else {\n                    if (arguments.length > 0) {\n                        var t = Colors.decode(s, r, v, u);\n                        p.stroke = t;\n                        q.strokeStyle = Colors.encode(t)\n                    }\n                }\n            },\n            strokeWidth: function(r) {\n                if (r === undefined) {\n                    return q.lineWidth\n                }\n                q.lineWidth = p.width = r\n            },\n            Color: function(r) {\n                return new d(r)\n            },\n            drawStyle: function(s) {\n                if (arguments.length == 0) {\n                    return objcopy(p)\n                }\n                if (arguments.length == 2) {\n                    var r = arguments[0];\n                    var v = arguments[1];\n                    if (typeof r == \"string\" && typeof v == \"object\") {\n                        var u = {};\n                        if (v.color !== undefined) {\n                            var t = Colors.decode(v.color);\n                            if (t) {\n                                u.color = t\n                            }\n                        }\n                        $.each(\"background fill stroke width\".split(\" \"), function(w, x) {\n                            if (v[x] !== undefined) {\n                                u[x] = v[x]\n                            }\n                        });\n                        if (!$.isEmptyObject(u)) {\n                            m[r] = u\n                        }\n                    }\n                    return\n                }\n                if (arguments.length == 1 && m[arguments[0]] !== undefined) {\n                    s = m[arguments[0]]\n                }\n                if (s.width !== undefined) {\n                    p.width = s.width\n                }\n                q.lineWidth = p.width;\n                $.each(\"background fill stroke\", function(y, x) {\n                    if (s[x] !== undefined) {\n                        if (s[x] === null) {\n                            p[x] = null\n                        }\n                        else {\n                            var w = Colors.decode(s[x]);\n                            if (w) {\n                                p[x] = w\n                            }\n                        }\n                    }\n                });\n                q.fillStyle = p.fill;\n                q.strokeStyle = p.stroke\n            },\n            textStyle: function(s) {\n                if (arguments.length == 0) {\n                    return objcopy(g)\n                }\n                if (arguments.length == 2) {\n                    var r = arguments[0];\n                    var v = arguments[1];\n                    if (typeof r == \"string\" && typeof v == \"object\") {\n                        var u = {};\n                        if (v.color !== undefined) {\n                            var t = Colors.decode(v.color);\n                            if (t) {\n                                u.color = t\n                            }\n                        }\n                        $.each(\"font size align baseline alpha\".split(\" \"), function(w, x) {\n                            if (v[x] !== undefined) {\n                                u[x] = v[x]\n                            }\n                        });\n                        if (!$.isEmptyObject(u)) {\n                            b[r] = u\n                        }\n                    }\n                    return\n                }\n                if (arguments.length == 1 && b[arguments[0]] !== undefined) {\n                    s = b[arguments[0]]\n                }\n                if (s.font !== undefined) {\n                    g.font = s.font\n                }\n                if (s.size !== undefined) {\n                    g.size = s.size\n                }\n                q.font = nano(\"{size}px {font}\", g);\n                if (s.align !== undefined) {\n                    q.textAlign = g.align = s.align\n                }\n                if (s.baseline !== undefined) {\n                    q.textBaseline = g.baseline = s.baseline\n                }\n                if (s.alpha !== undefined) {\n                    g.alpha = s.alpha\n                }\n                if (s.color !== undefined) {\n                    var t = Colors.decode(s.color);\n                    if (t) {\n                        g.color = t\n                    }\n                }\n                if (g.color) {\n                    var t = Colors.blend(g.color, g.alpha);\n                    if (t) {\n                        q.fillStyle = t\n                    }\n                }\n            },\n            text: function(s, r, z, v) {\n                if (arguments.length >= 3 && !isNaN(r)) {\n                    v = v || {};\n                    v.x = r;\n                    v.y = z\n                }\n                else {\n                    if (arguments.length == 2 && typeof(r) == \"object\") {\n                        v = r\n                    }\n                    else {\n                        v = v || {}\n                    }\n                }\n                var u = objmerge(g, v);\n                q.save();\n                if (u.align !== undefined) {\n                    q.textAlign = u.align\n                }\n                if (u.baseline !== undefined) {\n                    q.textBaseline = u.baseline\n                }\n                if (u.font !== undefined && !isNaN(u.size)) {\n                    q.font = nano(\"{size}px {font}\", u)\n                }\n                var w = (u.alpha !== undefined) ? u.alpha : g.alpha;\n                var t = (u.color !== undefined) ? u.color : g.color;\n                q.fillStyle = Colors.blend(t, w);\n                if (w > 0) {\n                    q.fillText(s, Math.round(u.x), u.y)\n                }\n                q.restore()\n            },\n            textWidth: function(r, t) {\n                t = objmerge(g, t || {});\n                q.save();\n                q.font = nano(\"{size}px {font}\", t);\n                var s = q.measureText(r).width;\n                q.restore();\n                return s\n            },\n            Rect: function(s, A, t, v, z, u) {\n                return new n(s, A, t, v, z, u)\n            },\n            rect: function(s, A, t, v, z, u) {\n                n.prototype._draw(s, A, t, v, z, u)\n            },\n            Oval: function(r, v, s, u, t) {\n                return new f(r, v, s, u, t)\n            },\n            oval: function(r, v, s, u, t) {\n                t = t || {};\n                f.prototype._draw(r, v, s, u, t)\n            },\n            line: function(s, v, r, t, u) {\n                var w = new a(s, v, r, t);\n                w.draw(u)\n            },\n            lines: function(s, u, r, t) {\n                if (typeof t == \"number\") {\n                    k.push([{\n                        x: s,\n                        y: u\n                    }, {\n                        x: r,\n                        y: t\n                    }])\n                }\n                else {\n                    k.push([s, u])\n                }\n            },\n            drawLines: function(r) {\n                var s = new a(k);\n                s.draw(r);\n                k = []\n            }\n        };\n        return j.init()\n    };\n\n    arbor = (typeof(arbor) !== 'undefined') ? arbor : {}\n    $.extend(arbor, {\n        // object constructor (don't use ‘new’, just call it)\n        Graphics: function(ctx) {\n            return Graphics(ctx)\n        },\n\n        // useful methods for dealing with the r/g/b\n        colors: {\n            CSS: Colors.CSS, // dict:{colorname:\"#fef2e2\", ...}\n            validate: Colors.validate, // ƒ(str) -> t/f\n            decode: Colors.decode, // ƒ(hexString_or_cssColor) -> {r,g,b,a}\n            encode: Colors.encode, // ƒ({r,g,b,a}) -> hexOrRgbaString\n            blend: Colors.blend // ƒ(color, opacity) -> rgbaString\n        }\n    })\n"],[0,"\n})("]],"start1":0,"start2":0,"length1":16006,"length2":34643}]],"length":34655,"saved":false}
