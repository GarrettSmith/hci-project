{"ts":1361257600045,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Originally grabbed from the official RaphaelJS Documentation\n * http://raphaeljs.com/graffle.html\n * Adopted (arrows) and commented by Philipp Strathausen http://blog.ameisenbar.de\n * Licenced under the MIT licence.\n */\n\n/**\n * Usage:\n * connect two shapes\n * parameters:\n *      source shape [or connection for redrawing],\n *      target shape,\n *      style with { fg : linecolor, bg : background color, directed: boolean }\n * returns:\n *      connection { draw = function() }\n */\nRaphael.fn.connection = function Connection(obj1, obj2, style) {\n  var selfRef = this;\n  /* create and return new connection */\n  var edge = {/*\n    from : obj1,\n    to : obj2,\n    style : style,*/\n    draw : function() {\n      /* get bounding boxes of target and source */\n      var bb1 = obj1.getBBox();\n      var bb2 = obj2.getBBox();\n      var off1 = 0;\n      var off2 = 0;\n      /* coordinates for potential connection coordinates from/to the objects */\n      var p = [\n        /* NORTH 1 */\n        { x: bb1.x + bb1.width / 2, y: bb1.y - off1 },\n        /* SOUTH 1 */\n        { x: bb1.x + bb1.width / 2, y: bb1.y + bb1.height + off1 },\n        /* WEST */\n        { x: bb1.x - off1, y: bb1.y + bb1.height / 2 },\n        /* EAST  1 */\n        { x: bb1.x + bb1.width + off1, y: bb1.y + bb1.height / 2 },\n        /* NORTH 2 */\n        { x: bb2.x + bb2.width / 2, y: bb2.y - off2 },\n        /* SOUTH 2 */\n        { x: bb2.x + bb2.width / 2, y: bb2.y + bb2.height + off2 },\n        /* WEST  2 */\n        { x: bb2.x - off2, y: bb2.y + bb2.height / 2 },\n        /* EAST  2 */\n        { x: bb2.x + bb2.width + off2, y: bb2.y + bb2.height / 2 }\n      ];\n      \n      /* distances between objects and according coordinates connection */\n      var d = {}, dis = [];\n\n      /*\n       * find out the best connection coordinates by trying all possible ways\n       */\n      /* loop the first object's connection coordinates */\n      for (var i = 0; i < 4; i++) {\n        /* loop the seond object's connection coordinates */\n        for (var j = 4; j < 8; j++) {\n          var dx = Math.abs(p[i].x - p[j].x);\n          var dy = Math.abs(p[i].y - p[j].y);\n          if ((i == j - 4) || (((i != 3 && j != 6) || p[i].x < p[j].x)\n                && ((i != 2 && j != 7) || p[i].x > p[j].x)\n                && ((i != 0 && j != 5) || p[i].y > p[j].y)\n                && ((i != 1 && j != 4) || p[i].y < p[j].y)))\n          {\n            dis.push(dx + dy);\n            d[dis[dis.length - 1].toFixed(3)] = [i, j];\n          }\n        }\n      }\n      var res = dis.length == 0 ? [0, 4] : d[Math.min.apply(Math, dis).toFixed(3)];\n      /* bezier path */\n      var x1 = p[res[0]].x,\n          y1 = p[res[0]].y,\n          x4 = p[res[1]].x,\n          y4 = p[res[1]].y,\n          dx = Math.max(Math.abs(x1 - x4) / 2, 10),\n          dy = Math.max(Math.abs(y1 - y4) / 2, 10),\n          x2 = [ x1, x1, x1 - dx, x1 + dx ][res[0]].toFixed(3),\n          y2 = [ y1 - dy, y1 + dy, y1, y1 ][res[0]].toFixed(3),\n          x3 = [ 0, 0, 0, 0, x4, x4, x4 - dx, x4 + dx ][res[1]].toFixed(3),\n          y3 = [ 0, 0, 0, 0, y1 + dy, y1 - dy, y4, y4 ][res[1]].toFixed(3);\n      /* assemble path and arrow */\n      var path = [ \"M\" + x1.toFixed(3), y1.toFixed(3),\n          \"C\" + x2, y2, x3, y3, x4.toFixed(3), y4.toFixed(3) ].join(\",\");\n      /* arrow */\n      if(style && style.directed) {\n        // magnitude, length of the last path vector \n        var mag = Math.sqrt((y4 - y3) * (y4 - y3) + (x4 - x3) * (x4 - x3));\n        // vector normalisation to specified length  \n        var norm = function(x,l){return (-x*(l||5)/mag);};\n        // calculate array coordinates (two lines orthogonal to the path vector) \n        var arr = [\n          { x:(norm(x4-x3)+norm(y4-y3)+x4).toFixed(3),\n            y:(norm(y4-y3)+norm(x4-x3)+y4).toFixed(3) },\n          { x:(norm(x4-x3)-norm(y4-y3)+x4).toFixed(3),\n            y:(norm(y4-y3)-norm(x4-x3)+y4).toFixed(3) }\n        ];\n        path = path + \",M\" + arr[0].x + \",\" + arr[0].y + \",L\" + x4 + \",\" +\n          y4 + \",L\" + arr[1].x + \",\" + arr[1].y;\n      }\n      /* function to be used for moving existent path(s), e.g. animate() or attr() */\n      var move = \"attr\";\n      /* applying path(s) */\n      edge.fg && edge.fg[move]({path:path})\n          || (edge.fg = selfRef.path(path)\n              .attr({ stroke: style && style.stroke || \"#000\", fill: \"none\" })\n              .toBack());\n      edge.bg && edge.bg[move]({path:path})\n          || style && style.fill && (edge.bg = style.fill.split\n              && selfRef.path(path)\n              .attr({ stroke: style.fill.split(\"|\")[0], fill: \"none\",\n                \"stroke-width\": style.fill.split(\"|\")[1] || 3 }).toBack());\n      /* setting label */\n      style && style.label\n          && (edge.label && edge.label.attr({x:(x1+x4)/2, y:(y1+y4)/2})\n              || (edge.label = selfRef.text((x1+x4)/2, (y1+y4)/2, style.label)\n                .attr({fill: \"#000\", \"font-size\": style[\"font-size\"] || \"12px\"})));\n      style && style.label && style[\"label-style\"] && edge.label\n        && edge.label.attr(style[\"label-style\"]);\n      style && style.callback && style.callback(edge);\n    }\n  }\n  edge.draw();\n  return edge;\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":5170}]],"length":5170}
{"contributors":[],"silentsave":true,"ts":1361257527138,"patch":[[{"diffs":[[0,"xed(3);\n"],[1,"          \n"],[0,"      /*"]],"start1":3109,"start2":3109,"length1":16,"length2":27}]],"length":5181,"saved":false}
{"ts":1361257529029,"patch":[[{"diffs":[[0,"3);\n    "],[-1,"      "],[0,"\n      /"]],"start1":3113,"start2":3113,"length1":22,"length2":16}]],"length":5175,"saved":false}
{"ts":1361257530095,"patch":[[{"diffs":[[0,"xed(3);\n    "],[1,"    "],[0,"\n      /* as"]],"start1":3109,"start2":3109,"length1":24,"length2":28}]],"length":5179,"saved":false}
{"ts":1361257531405,"patch":[[{"diffs":[[0,"3);\n        "],[1,"consol"],[0,"\n      /* as"]],"start1":3113,"start2":3113,"length1":24,"length2":30}]],"length":5185,"saved":false}
{"ts":1361257532232,"patch":[[{"diffs":[[0,"  consol"],[1,"e."],[0,"\n      /"]],"start1":3123,"start2":3123,"length1":16,"length2":18}]],"length":5187,"saved":false}
{"ts":1361257533163,"patch":[[{"diffs":[[0,"console."],[1,"lo"],[0,"\n      /"]],"start1":3125,"start2":3125,"length1":16,"length2":18}]],"length":5189,"saved":false}
{"ts":1361257535254,"patch":[[{"diffs":[[0,"nsole.lo"],[1,"g"],[0,"\n      /"]],"start1":3127,"start2":3127,"length1":16,"length2":17}]],"length":5190,"saved":false}
{"ts":1361257535967,"patch":[[{"diffs":[[0,"sole.log"],[1,"()"],[0,"\n      /"]],"start1":3128,"start2":3128,"length1":16,"length2":18}]],"length":5192,"saved":false}
{"ts":1361257537092,"patch":[[{"diffs":[[0,"ole.log("],[1,"\"go\""],[0,")\n      "]],"start1":3129,"start2":3129,"length1":16,"length2":20}]],"length":5196,"saved":false}
{"ts":1361257538859,"patch":[[{"diffs":[[0,".log(\"go"],[1,"t here"],[0,"\")\n     "]],"start1":3132,"start2":3132,"length1":16,"length2":22}]],"length":5202,"saved":false}
{"ts":1361257539988,"patch":[[{"diffs":[[0,"t here\")"],[1,";"],[0,"\n      /"]],"start1":3140,"start2":3140,"length1":16,"length2":17}]],"length":5203,"saved":false}
{"ts":1361257550100,"patch":[[{"diffs":[[0,"3);\n"],[-1,"        console.log(\"got here\");\n"],[0,"    "]],"start1":3113,"start2":3113,"length1":41,"length2":8}]],"length":5170,"saved":false}
{"ts":1361257554623,"patch":[[{"diffs":[[0,"xed(3);\n"],[1,"      var x1 = p[res[0]].x,\n          y1 = p[res[0]].y,\n          x4 = p[res[1]].x,\n          y4 = p[res[1]].y,\n          dx = Math.max(Math.abs(x1 - x4) / 2, 10),\n          dy = Math.max(Math.abs(y1 - y4) / 2, 10),\n          x2 = [ x1, x1, x1 - dx, x1 + dx ][res[0]].toFixed(3),\n          y2 = [ y1 - dy, y1 + dy, y1, y1 ][res[0]].toFixed(3),\n          x3 = [ 0, 0, 0, 0, x4, x4, x4 - dx, x4 + dx ][res[1]].toFixed(3),\n          y3 = [ 0, 0, 0, 0, y1 + dy, y1 - dy, y4, y4 ][res[1]].toFixed(3);\n"],[0,"      /*"]],"start1":3109,"start2":3109,"length1":16,"length2":512}]],"length":5666,"saved":false}
{"ts":1361257566338,"patch":[[{"diffs":[[0,"ier path */\n"],[1,"//"],[0,"      var x1"]],"start1":2609,"start2":2609,"length1":24,"length2":26},{"diffs":[[0," = p[res[0]].x,\n"],[1,"//"],[0,"          y1 = p"]],"start1":2635,"start2":2635,"length1":32,"length2":34},{"diffs":[[0," = p[res[0]].y,\n"],[1,"//"],[0,"          x4 = p"]],"start1":2665,"start2":2665,"length1":32,"length2":34},{"diffs":[[0," = p[res[1]].x,\n"],[1,"//"],[0,"          y4 = p"]],"start1":2695,"start2":2695,"length1":32,"length2":34},{"diffs":[[0," = p[res[1]].y,\n"],[1,"//"],[0,"          dx = M"]],"start1":2725,"start2":2725,"length1":32,"length2":34},{"diffs":[[0,"- x4) / 2, 10),\n"],[1,"//"],[0,"          dy = M"]],"start1":2779,"start2":2779,"length1":32,"length2":34},{"diffs":[[0,"- y4) / 2, 10),\n"],[1,"//"],[0,"          x2 = ["]],"start1":2833,"start2":2833,"length1":32,"length2":34},{"diffs":[[0,"0]].toFixed(3),\n"],[1,"//"],[0,"          y2 = ["]],"start1":2899,"start2":2899,"length1":32,"length2":34},{"diffs":[[0,"0]].toFixed(3),\n"],[1,"//"],[0,"          x3 = ["]],"start1":2965,"start2":2965,"length1":32,"length2":34},{"diffs":[[0,"1]].toFixed(3),\n"],[1,"//"],[0,"          y3 = ["]],"start1":3043,"start2":3043,"length1":32,"length2":34}]],"length":5686,"saved":false}
{"ts":1361257573721,"patch":[[{"diffs":[[0,"toFixed(3);\n"],[1,"// custom path drawing\n"],[0,"      var x1"]],"start1":3125,"start2":3125,"length1":24,"length2":47}]],"length":5709,"saved":false}
{"ts":1361257577137,"patch":[[{"diffs":[[0,".y,\n"],[-1,"          dx = Math.max(Math.abs(x1 - x4) / 2, 10),\n          dy = Math.max(Math.abs(y1 - y4) / 2, 10),\n"],[0,"    "]],"start1":3268,"start2":3268,"length1":112,"length2":8}]],"length":5605,"saved":false}
{"ts":1361257580305,"patch":[[{"diffs":[[0,"2 = "],[-1,"[ x1, x1, x1 - dx, x1 + dx ][res[0]].toFixed(3),"],[0,"\n   "]],"start1":3283,"start2":3283,"length1":56,"length2":8}]],"length":5557,"saved":false}
{"ts":1361257583250,"patch":[[{"diffs":[[0,"   x2 = "],[1,"x1,"],[0,"\n       "]],"start1":3279,"start2":3279,"length1":16,"length2":19}]],"length":5560,"saved":false}
{"ts":1361257587286,"patch":[[{"diffs":[[0,"2 = "],[-1,"[ y1 - dy, y1 + dy, y1, y1 ][res[0]].toFixed(3),"],[0,"\n   "]],"start1":3302,"start2":3302,"length1":56,"length2":8}]],"length":5512,"saved":false}
{"ts":1361257589456,"patch":[[{"diffs":[[0,"   y2 = "],[1,"x2"],[0,"\n       "]],"start1":3298,"start2":3298,"length1":16,"length2":18}]],"length":5514,"saved":false}
{"ts":1361257591346,"patch":[[{"diffs":[[0,"   y2 = "],[-1,"x2"],[0,"\n       "]],"start1":3298,"start2":3298,"length1":18,"length2":16}]],"length":5512,"saved":false}
{"ts":1361257593262,"patch":[[{"diffs":[[0,"   y2 = "],[1,"y1,"],[0,"\n       "]],"start1":3298,"start2":3298,"length1":16,"length2":19}]],"length":5515,"saved":false}
{"ts":1361257603140,"patch":[[{"diffs":[[0,"3 = "],[-1,"[ 0, 0, 0, 0, x4, x4, x4 - dx, x4 + dx ][res[1]].toFixed(3),"],[0,"\n   "]],"start1":3321,"start2":3321,"length1":68,"length2":8}]],"length":5455,"saved":false}
{"ts":1361257606763,"patch":[[{"diffs":[[0,"   x3 = "],[1,"x4"],[0,"\n       "]],"start1":3317,"start2":3317,"length1":16,"length2":18}]],"length":5457,"saved":false}
{"ts":1361257608323,"patch":[[{"diffs":[[0," x3 = x4"],[1,","],[0,"\n       "]],"start1":3319,"start2":3319,"length1":16,"length2":17}]],"length":5458,"saved":false}
{"ts":1361257611978,"patch":[[{"diffs":[[0,"3 = "],[-1,"[ 0, 0, 0, 0, y1 + dy, y1 - dy, y4, y4 ][res[1]].toFixed(3);"],[0,"\n   "]],"start1":3340,"start2":3340,"length1":68,"length2":8}]],"length":5398,"saved":false}
{"ts":1361257613151,"patch":[[{"diffs":[[0,"   y3 = "],[1,"y4"],[0,"\n      /"]],"start1":3336,"start2":3336,"length1":16,"length2":18}]],"length":5400,"saved":false}
{"ts":1361257613640,"patch":[[{"diffs":[[0," y3 = y4"],[1,";"],[0,"\n      /"]],"start1":3338,"start2":3338,"length1":16,"length2":17}]],"length":5401,"saved":false}
{"ts":1361257649055,"patch":[[{"diffs":[[0,"    x2 ="],[1," x4 -"],[0," x1,\n   "]],"start1":3278,"start2":3278,"length1":16,"length2":21}]],"length":5406,"saved":false}
{"ts":1361257651454,"patch":[[{"diffs":[[0,"   x2 = "],[1,"("],[0,"x4 - x1,"]],"start1":3279,"start2":3279,"length1":16,"length2":17}]],"length":5407,"saved":false}
{"ts":1361257654161,"patch":[[{"diffs":[[0,"(x4 - x1"],[1,") "],[0,",\n      "]],"start1":3287,"start2":3287,"length1":16,"length2":18}]],"length":5409,"saved":false}
{"ts":1361257655602,"patch":[[{"diffs":[[0,"4 - x1) "],[1,"/ 2"],[0,",\n      "]],"start1":3289,"start2":3289,"length1":16,"length2":19}]],"length":5412,"saved":false}
{"ts":1361257671449,"patch":[[{"diffs":[[0," y3 = y4"],[1," - "],[0,";\n      "]],"start1":3349,"start2":3349,"length1":16,"length2":19}]],"length":5415,"saved":false}
{"ts":1361257673289,"patch":[[{"diffs":[[0," = y4 - "],[1,"y1)"],[0,";\n      "]],"start1":3352,"start2":3352,"length1":16,"length2":19}]],"length":5418,"saved":false}
{"ts":1361257675839,"patch":[[{"diffs":[[0,"   y3 = "],[1,"("],[0,"y4 - y1)"]],"start1":3347,"start2":3347,"length1":16,"length2":17}]],"length":5419,"saved":false}
{"ts":1361257678335,"patch":[[{"diffs":[[0,"y4 - y1)"],[1,"/2"],[0,";\n      "]],"start1":3356,"start2":3356,"length1":16,"length2":18}]],"length":5421,"saved":false}
{"ts":1361257680249,"patch":[[{"diffs":[[0,"y4 - y1)"],[-1,"/"],[1," / "],[0,"2;\n     "]],"start1":3356,"start2":3356,"length1":17,"length2":19}]],"length":5423,"saved":false}
{"ts":1361257713227,"patch":[[{"diffs":[[0," y3 = (y"],[-1,"4"],[1,"1"],[0," - y1) /"]],"start1":3349,"start2":3349,"length1":17,"length2":17}]],"length":5423,"saved":false}
{"ts":1361257715193,"patch":[[{"diffs":[[0," (y1 - y"],[-1,"1"],[1,"4"],[0,") / 2;\n "]],"start1":3354,"start2":3354,"length1":17,"length2":17}]],"length":5423,"saved":false}
{"ts":1361257724859,"patch":[[{"diffs":[[0," x2 = (x"],[-1,"4"],[1,"1"],[0," - x1) /"]],"start1":3281,"start2":3281,"length1":17,"length2":17}]],"length":5423,"saved":false}
{"ts":1361257726750,"patch":[[{"diffs":[[0," (x1 - x"],[-1,"1"],[1,"4"],[0,") / 2,\n "]],"start1":3286,"start2":3286,"length1":17,"length2":17}]],"length":5423,"saved":false}
{"ts":1361257789577,"patch":[[{"diffs":[[0,"    x2 ="],[1," x1"],[0," (x1 - x"]],"start1":3278,"start2":3278,"length1":16,"length2":19}]],"length":5426,"saved":false}
{"ts":1361257791073,"patch":[[{"diffs":[[0," x2 = x1"],[1," +"],[0," (x1 - x"]],"start1":3281,"start2":3281,"length1":16,"length2":18}]],"length":5428,"saved":false}
{"ts":1361257797923,"patch":[[{"diffs":[[0,"   y3 = "],[-1,"(y1 - y4) / 2"],[0,";\n      "]],"start1":3352,"start2":3352,"length1":29,"length2":16}]],"length":5415,"saved":false}
{"ts":1361257800600,"patch":[[{"diffs":[[0,"   y3 = "],[1,"y4"],[0,";\n      "]],"start1":3352,"start2":3352,"length1":16,"length2":18}]],"length":5417,"saved":false}
{"ts":1361257805712,"patch":[[{"diffs":[[0,"2 = y1,\n"],[1,"          x2 = x1 + (x1 - x4) / 2,\n"],[0,"        "]],"start1":3318,"start2":3318,"length1":16,"length2":51}]],"length":5452,"saved":false}
{"ts":1361257807342,"patch":[[{"diffs":[[0," 2,\n"],[-1,"          x3 = x4,\n"],[0,"    "]],"start1":3357,"start2":3357,"length1":27,"length2":8}]],"length":5433,"saved":false}
{"ts":1361257810654,"patch":[[{"diffs":[[0," y1,\n          x"],[-1,"2"],[1,"3"],[0," = x1 + (x1 - x4"]],"start1":3321,"start2":3321,"length1":33,"length2":33}]],"length":5433,"saved":false}
{"ts":1361257825291,"patch":[[{"diffs":[[0,"    x3 = x1 + (x"],[-1,"1"],[1,"4"],[0," - x4) / 2,\n    "]],"start1":3332,"start2":3332,"length1":33,"length2":33}]],"length":5433,"saved":false}
{"ts":1361257827011,"patch":[[{"diffs":[[0,"x1 + (x4 - x"],[-1,"4"],[1,"1"],[0,") / 2,\n     "]],"start1":3341,"start2":3341,"length1":25,"length2":25}]],"length":5433,"saved":false}
{"ts":1361257830119,"patch":[[{"diffs":[[0," x1 + (x"],[-1,"1"],[1,"4"],[0," - x4) /"]],"start1":3286,"start2":3286,"length1":17,"length2":17}]],"length":5433,"saved":false}
{"ts":1361257831573,"patch":[[{"diffs":[[0,"x1 + (x4 - x"],[-1,"4"],[1,"1"],[0,") / 2,\n     "]],"start1":3287,"start2":3287,"length1":25,"length2":25}]],"length":5433,"saved":false}
{"ts":1361258042655,"patch":[[{"diffs":[[0,"       \""],[-1,"C"],[1,"L"],[0,"\" + x2, "]],"start1":3474,"start2":3474,"length1":17,"length2":17}]],"length":5433,"saved":false}
{"ts":1361258237571,"patch":[[{"diffs":[[0,"path */\n"],[-1,"//"],[0,"      va"]],"start1":2613,"start2":2613,"length1":18,"length2":16},{"diffs":[[0,"[res[0]].x,\n"],[-1,"//"],[0,"          y1"]],"start1":2637,"start2":2637,"length1":26,"length2":24},{"diffs":[[0,"[res[0]].y,\n"],[-1,"//"],[0,"          x4"]],"start1":2665,"start2":2665,"length1":26,"length2":24},{"diffs":[[0,"[1]].x,\n"],[-1,"//"],[0,"        "]],"start1":2697,"start2":2697,"length1":18,"length2":16},{"diffs":[[0,"[1]].y,\n"],[-1,"//"],[0,"        "]],"start1":2725,"start2":2725,"length1":18,"length2":16},{"diffs":[[0,"- x4) / 2, 10),\n"],[-1,"//"],[0,"          dy = M"]],"start1":2769,"start2":2769,"length1":34,"length2":32},{"diffs":[[0,"2, 10),\n"],[-1,"//"],[0,"        "]],"start1":2829,"start2":2829,"length1":18,"length2":16},{"diffs":[[0,"0]].toFixed(3),\n"],[-1,"//"],[0,"          y2 = ["]],"start1":2885,"start2":2885,"length1":34,"length2":32},{"diffs":[[0,"0]].toFixed(3),\n"],[-1,"//"],[0,"          x3 = ["]],"start1":2949,"start2":2949,"length1":34,"length2":32},{"diffs":[[0,"xed(3),\n"],[-1,"//"],[0,"        "]],"start1":3033,"start2":3033,"length1":18,"length2":16},{"diffs":[[0,"3);\n"],[-1,"// custom path drawing\n      var x1 = p[res[0]].x,\n          y1 = p[res[0]].y,\n          x4 = p[res[1]].x,\n          y4 = p[res[1]].y,\n          x2 = x1 + (x4 - x1) / 2,\n          y2 = y1,\n          x3 = x1 + (x4 - x1) / 2,\n          y3 = y4;\n"],[0,"    "]],"start1":3113,"start2":3113,"length1":251,"length2":8},{"diffs":[[0,"       \""],[-1,"L"],[1,"C"],[0,"\" + x2, "]],"start1":3211,"start2":3211,"length1":17,"length2":17}]],"length":5170,"saved":false}
{"ts":1361258243821,"patch":[[{"diffs":[[0,"       \""],[-1,"C"],[1,"L"],[0,"\" + x2, "]],"start1":3211,"start2":3211,"length1":17,"length2":17}]],"length":5170,"saved":false}
